/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Baocao.BaoCao;
import NhanVien.NhanVien;
import Phieu.PhieuNX;
import Phieu.PhieuNXCT;
import Phieu.SanPham;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Windows
 */
public class PanelPhieu extends javax.swing.JPanel {

    DefaultTableModel model, modelphieu, modelphieuct;
    boolean fk = false;
    TableRowSorter sorter;
    String maPhieu = "";
    String maSP = "";
    int sL = 0;

    /**
     * Creates new form PanelPhieu
     */
    public PanelPhieu() {
        initComponents();
        initData();
        txtMaPhieu.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grNX = new javax.swing.ButtonGroup();
        grLoai = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        PanelLapPhieu = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtMaPhieu = new javax.swing.JTextField();
        cboLoaiPhieu = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtMaNVPhieu = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        grPhieuSP = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        grPhieuSPCT = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbPhieu = new javax.swing.JLabel();
        btnChon = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaHet = new javax.swing.JButton();
        btnXoaTimKiem = new javax.swing.JButton();
        btnTaoPhieu = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        PanelThongTinPhieu = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ThongTinPhieu = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        ThongTinPhieuCT = new javax.swing.JTable();
        PanelTimKiem = new javax.swing.JPanel();
        rdLoai1 = new javax.swing.JRadioButton();
        rdLoai2 = new javax.swing.JRadioButton();
        btnSearchPhieu = new javax.swing.JButton();
        btnClearSearch = new javax.swing.JButton();
        btnSearchMaPhieu = new javax.swing.JButton();
        rdLoai3 = new javax.swing.JRadioButton();
        PanelLoai1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rdNhap = new javax.swing.JRadioButton();
        rdXuat = new javax.swing.JRadioButton();
        PanelLoai2 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        txttungay = new com.toedter.calendar.JDateChooser();
        txtdenngay = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        PanelLoai3 = new javax.swing.JPanel();
        txtTim = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        PanelCapNhat_Phieu = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtMaSP_Phieu = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTenSP_Phieu = new javax.swing.JTextField();
        txtSL_Phieu = new javax.swing.JTextField();
        btnCapNhatSL = new javax.swing.JButton();
        btnXoaForm = new javax.swing.JButton();
        btnCapNhatHeThongTable = new javax.swing.JButton();
        btnHuyPhieu = new javax.swing.JButton();

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        PanelLapPhieu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tạo phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/tải xuống.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cboLoaiPhieu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nhập", "Xuất" }));
        cboLoaiPhieu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiPhieuItemStateChanged(evt);
            }
        });
        cboLoaiPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiPhieuActionPerformed(evt);
            }
        });

        jLabel17.setText("Loại phiếu");

        jLabel24.setText("Mã NV");

        txtMaNVPhieu.setEditable(false);
        txtMaNVPhieu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtMaNVPhieu.setEnabled(false);
        txtMaNVPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVPhieuActionPerformed(evt);
            }
        });

        jLabel25.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane10.setViewportView(txtGhiChu);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        grPhieuSP.setAutoCreateRowSorter(true);
        grPhieuSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Tồn kho"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grPhieuSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grPhieuSPMouseClicked(evt);
            }
        });
        grPhieuSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grPhieuSPKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(grPhieuSP);

        grPhieuSPCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grPhieuSPCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grPhieuSPCTMouseClicked(evt);
            }
        });
        grPhieuSPCT.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                grPhieuSPCTInputMethodTextChanged(evt);
            }
        });
        grPhieuSPCT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                grPhieuSPCTPropertyChange(evt);
            }
        });
        grPhieuSPCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grPhieuSPCTKeyPressed(evt);
            }
        });
        jScrollPane9.setViewportView(grPhieuSPCT);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Trong Kho");

        lbPhieu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbPhieu.setText("Phiếu Nhập");

        btnChon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/checkmark.png"))); // NOI18N
        btnChon.setText("Chọn");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/remove.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaHet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clear-brush-broom-sweeping-change-icone-7230-16.png"))); // NOI18N
        btnXoaHet.setText("Xoá tất cả");
        btnXoaHet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(btnChon)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(lbPhieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaHet)
                        .addGap(14, 14, 14))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(btnXoa)
                        .addComponent(btnXoaHet))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChon)
                        .addComponent(lbPhieu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnXoaTimKiem.setText("Xoá tìm kiếm");
        btnXoaTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTimKiemActionPerformed(evt);
            }
        });

        btnTaoPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Ok.png"))); // NOI18N
        btnTaoPhieu.setText("Tạo phiếu");
        btnTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoPhieuActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/arrow_refresh.png"))); // NOI18N
        jButton3.setText("Cập nhật hệ thống");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel7.setText("Tên Sản Phẩm:");

        javax.swing.GroupLayout PanelLapPhieuLayout = new javax.swing.GroupLayout(PanelLapPhieu);
        PanelLapPhieu.setLayout(PanelLapPhieuLayout);
        PanelLapPhieuLayout.setHorizontalGroup(
            PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLapPhieuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLapPhieuLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLapPhieuLayout.createSequentialGroup()
                                .addComponent(txtMaNVPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboLoaiPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTaoPhieu)
                        .addGap(43, 43, 43))
                    .addGroup(PanelLapPhieuLayout.createSequentialGroup()
                        .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(PanelLapPhieuLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoaTimKiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        PanelLapPhieuLayout.setVerticalGroup(
            PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLapPhieuLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(txtMaNVPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(cboLoaiPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(btnTaoPhieu, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLapPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaTimKiem)
                    .addComponent(jButton3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Lập phiếu", PanelLapPhieu);

        ThongTinPhieu.setAutoCreateRowSorter(true);
        ThongTinPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Loại phiếu", "Mã nhân viên", "Ngày lập", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ThongTinPhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ThongTinPhieuMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(ThongTinPhieu);

        ThongTinPhieuCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "SL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ThongTinPhieuCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ThongTinPhieuCTMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(ThongTinPhieuCT);
        if (ThongTinPhieuCT.getColumnModel().getColumnCount() > 0) {
            ThongTinPhieuCT.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        PanelTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tiêu chí tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        grLoai.add(rdLoai1);
        rdLoai1.setText("Tìm theo Nhập/Xuất");
        rdLoai1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLoai1ActionPerformed(evt);
            }
        });

        grLoai.add(rdLoai2);
        rdLoai2.setText("Tìm theo ngày");
        rdLoai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLoai2ActionPerformed(evt);
            }
        });

        btnSearchPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/tải xuống.png"))); // NOI18N
        btnSearchPhieu.setText("Tìm kiếm");
        btnSearchPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPhieuActionPerformed(evt);
            }
        });

        btnClearSearch.setText("Xoá");
        btnClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSearchActionPerformed(evt);
            }
        });

        btnSearchMaPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/tải xuống.png"))); // NOI18N
        btnSearchMaPhieu.setText("Tìm kiếm");
        btnSearchMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMaPhieuActionPerformed(evt);
            }
        });

        grLoai.add(rdLoai3);
        rdLoai3.setText("Tìm theo mã phiếu");
        rdLoai3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdLoai3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Loại giao dịch :");

        grNX.add(rdNhap);
        rdNhap.setText("Nhập");

        grNX.add(rdXuat);
        rdXuat.setText("Xuất");

        javax.swing.GroupLayout PanelLoai1Layout = new javax.swing.GroupLayout(PanelLoai1);
        PanelLoai1.setLayout(PanelLoai1Layout);
        PanelLoai1Layout.setHorizontalGroup(
            PanelLoai1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLoai1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdNhap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdXuat)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelLoai1Layout.setVerticalGroup(
            PanelLoai1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLoai1Layout.createSequentialGroup()
                .addGroup(PanelLoai1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdNhap)
                    .addComponent(rdXuat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel26.setText("Từ ngày :");

        txttungay.setDateFormatString("yyyy-MM-dd");

        txtdenngay.setDateFormatString("yyyy-MM-dd");

        jLabel27.setText("Đến ngày :");

        javax.swing.GroupLayout PanelLoai2Layout = new javax.swing.GroupLayout(PanelLoai2);
        PanelLoai2.setLayout(PanelLoai2Layout);
        PanelLoai2Layout.setHorizontalGroup(
            PanelLoai2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLoai2Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttungay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtdenngay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelLoai2Layout.setVerticalGroup(
            PanelLoai2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLoai2Layout.createSequentialGroup()
                .addGroup(PanelLoai2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtdenngay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLoai2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel26)
                        .addComponent(txttungay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimActionPerformed(evt);
            }
        });
        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKeyPressed(evt);
            }
        });

        jLabel2.setText("Mã Phiếu: ");

        javax.swing.GroupLayout PanelLoai3Layout = new javax.swing.GroupLayout(PanelLoai3);
        PanelLoai3.setLayout(PanelLoai3Layout);
        PanelLoai3Layout.setHorizontalGroup(
            PanelLoai3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLoai3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );
        PanelLoai3Layout.setVerticalGroup(
            PanelLoai3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLoai3Layout.createSequentialGroup()
                .addGroup(PanelLoai3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelTimKiemLayout = new javax.swing.GroupLayout(PanelTimKiem);
        PanelTimKiem.setLayout(PanelTimKiemLayout);
        PanelTimKiemLayout.setHorizontalGroup(
            PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTimKiemLayout.createSequentialGroup()
                .addComponent(rdLoai3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdLoai2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdLoai1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelLoai2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelLoai3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelLoai1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelTimKiemLayout.createSequentialGroup()
                        .addComponent(btnSearchPhieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchMaPhieu)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        PanelTimKiemLayout.setVerticalGroup(
            PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTimKiemLayout.createSequentialGroup()
                .addGroup(PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdLoai3)
                    .addComponent(rdLoai2)
                    .addComponent(rdLoai1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelLoai1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelLoai2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelLoai3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchPhieu)
                    .addComponent(btnClearSearch)
                    .addComponent(btnSearchMaPhieu)))
        );

        jLabel4.setText("Mã SP:");

        txtMaSP_Phieu.setEnabled(false);

        jLabel5.setText("Tên SP:");

        jLabel6.setText("SL:");

        txtTenSP_Phieu.setEnabled(false);

        btnCapNhatSL.setText("Cập nhật");
        btnCapNhatSL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCapNhatSLMouseClicked(evt);
            }
        });
        btnCapNhatSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSLActionPerformed(evt);
            }
        });

        btnXoaForm.setText("Ẩn");
        btnXoaForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelCapNhat_PhieuLayout = new javax.swing.GroupLayout(PanelCapNhat_Phieu);
        PanelCapNhat_Phieu.setLayout(PanelCapNhat_PhieuLayout);
        PanelCapNhat_PhieuLayout.setHorizontalGroup(
            PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCapNhat_PhieuLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(PanelCapNhat_PhieuLayout.createSequentialGroup()
                        .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelCapNhat_PhieuLayout.createSequentialGroup()
                                .addComponent(btnCapNhatSL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoaForm, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                            .addComponent(txtTenSP_Phieu)
                            .addComponent(txtMaSP_Phieu)
                            .addComponent(txtSL_Phieu, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelCapNhat_PhieuLayout.setVerticalGroup(
            PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCapNhat_PhieuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaSP_Phieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTenSP_Phieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSL_Phieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelCapNhat_PhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhatSL)
                    .addComponent(btnXoaForm))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        btnCapNhatHeThongTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/arrow_refresh.png"))); // NOI18N
        btnCapNhatHeThongTable.setText("Cập nhật hệ thống");
        btnCapNhatHeThongTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatHeThongTableActionPerformed(evt);
            }
        });

        btnHuyPhieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Cancel2.png"))); // NOI18N
        btnHuyPhieu.setText("Hủy Phiếu");
        btnHuyPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyPhieuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelThongTinPhieuLayout = new javax.swing.GroupLayout(PanelThongTinPhieu);
        PanelThongTinPhieu.setLayout(PanelThongTinPhieuLayout);
        PanelThongTinPhieuLayout.setHorizontalGroup(
            PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelThongTinPhieuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(PanelThongTinPhieuLayout.createSequentialGroup()
                        .addGroup(PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelThongTinPhieuLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PanelCapNhat_Phieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(PanelTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCapNhatHeThongTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHuyPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PanelThongTinPhieuLayout.setVerticalGroup(
            PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelThongTinPhieuLayout.createSequentialGroup()
                .addGroup(PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelThongTinPhieuLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnCapNhatHeThongTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHuyPhieu))
                    .addComponent(PanelTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelThongTinPhieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCapNhat_Phieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Thông tin phiếu", PanelThongTinPhieu);
        PanelThongTinPhieu.getAccessibleContext().setAccessibleName(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTimKiemActionPerformed
        // TODO add your handling code here:
        sorter.setRowFilter(null);
    }//GEN-LAST:event_btnXoaTimKiemActionPerformed

    private void btnXoaHetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHetActionPerformed
        DefaultTableModel modeeqar = (DefaultTableModel) grPhieuSPCT.getModel();
        modeeqar.setRowCount(0);
    }//GEN-LAST:event_btnXoaHetActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (grPhieuSPCT.getSelectedRow() != -1) {
            int rowremove = grPhieuSPCT.getSelectedRow();
            DefaultTableModel moderino = (DefaultTableModel) grPhieuSPCT.getModel();
            moderino.removeRow(rowremove);
        } else {
            JOptionPane.showMessageDialog(null, "Chưa chọn dòng nào");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelspco = (DefaultTableModel) grPhieuSP.getModel();
        DefaultTableModel modelphieucount = (DefaultTableModel) grPhieuSPCT.getModel();
        if (grPhieuSP.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Chưa chọn dòng nào");
            return;
        } else {
            if (cboLoaiPhieu.getSelectedIndex() == 1) {
                for (int a = 0; a < modelphieucount.getRowCount(); a++) {
                    for (int b = 0; b < modelspco.getRowCount(); b++) {
                        if (modelphieucount.getValueAt(a, 0).toString().trim().equals(modelspco.getValueAt(b, 0).toString())) {
                            int x = (int) modelspco.getValueAt(b, 2);
                            int y = (int) modelphieucount.getValueAt(a, 2);
                            if ((x - y) <= 0) {
                                JOptionPane.showMessageDialog(null, "Vuot qua ton kho !!!");
                                modelphieucount.removeRow(a);
                                return;
                            }
                        }
                    }
                }
            }
            DefaultTableModel modeeeeee = (DefaultTableModel) grPhieuSPCT.getModel();
            Vector v = new Vector();
            int row = grPhieuSP.getSelectedRow();
            boolean dup = false;
            int ia = grPhieuSPCT.getRowCount();
            for (int i = 0; i < ia; i++) {
                if (grPhieuSPCT.getModel().getValueAt(i, 0).toString().equals(grPhieuSP.getModel().getValueAt(row, 0).toString())) {
                    int sl = Integer.parseInt(grPhieuSPCT.getValueAt(i, 2).toString());
                    sl++;
                    grPhieuSPCT.setValueAt(sl, i, 2);
                    dup = true;
                    break;
                }
            }

            if (!dup) {
                v.add(grPhieuSP.getModel().getValueAt(row, 0).toString());
                v.add(grPhieuSP.getModel().getValueAt(row, 1).toString());
                v.add(1);
                modeeeeee.addRow(v);
            }
        }
    }//GEN-LAST:event_btnChonActionPerformed

    private void grPhieuSPCTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grPhieuSPCTKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (grPhieuSPCT.getSelectedRow() != -1) {
                int rowremove = grPhieuSPCT.getSelectedRow();
                DefaultTableModel moderino = (DefaultTableModel) grPhieuSPCT.getModel();
                moderino.removeRow(rowremove);
            }
        }
    }//GEN-LAST:event_grPhieuSPCTKeyPressed

    private void grPhieuSPCTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_grPhieuSPCTPropertyChange
        // TODO add your handling code here:
        modelphieuct = (DefaultTableModel) grPhieuSPCT.getModel();
        modelphieu = (DefaultTableModel) grPhieuSP.getModel();
        for (int i = 0; i < modelphieuct.getRowCount(); i++) {
            if (modelphieuct.getValueAt(i, 2).toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống số lượng !!");
                modelphieuct.setValueAt(1, i, 2);
                return;
            }
        }
        if (cboLoaiPhieu.getSelectedIndex() == 1) {
            modelphieuct.addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {

                    for (int a = 0; a < modelphieuct.getRowCount(); a++) {
                        for (int b = 0; b < modelphieu.getRowCount(); b++) {
                            if (modelphieuct.getValueAt(a, 0).toString().trim().equals(modelphieu.getValueAt(b, 0).toString())) {
                                int y = (int) modelphieuct.getValueAt(a, 2);
                                int x = (int) modelphieu.getValueAt(b, 2);
                                if ((x - y) <= 0) {
                                    JOptionPane.showMessageDialog(null, "Vượt quá số lượng tồn kho");
                                    modelphieuct.setValueAt(1, a, 2);
                                    break;
                                }

                            }
                        }
                    }
                }
            });
        }

        for (int i = 0; i < modelphieuct.getRowCount(); i++) {
            int d = Integer.parseInt(modelphieuct.getValueAt(i, 2).toString());
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 1");
                modelphieuct.setValueAt(1, i, 2);
                return;

            }
            if (d >= 200) {
                JOptionPane.showMessageDialog(null, "Vượt quá sô lượng xuất/nhập cho phép (200 tối đa)");
                modelphieuct.setValueAt(1, i, 2);
                return;
            }
            if (!modelphieuct.getValueAt(i, 2).toString().trim().matches("\\d+")) {
                JOptionPane.showMessageDialog(null, "Chỉ được là số > 0");
                modelphieuct.setValueAt(1, i, 2);
                return;
            }
        }
    }//GEN-LAST:event_grPhieuSPCTPropertyChange

    private void grPhieuSPCTInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_grPhieuSPCTInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_grPhieuSPCTInputMethodTextChanged

    private void grPhieuSPCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grPhieuSPCTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grPhieuSPCTMouseClicked

    private void grPhieuSPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grPhieuSPKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel modelspco = (DefaultTableModel) grPhieuSP.getModel();
            DefaultTableModel modelphieucount = (DefaultTableModel) grPhieuSPCT.getModel();
            if (grPhieuSP.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Chưa chọn dòng nào");
                return;
            } else {
                if (cboLoaiPhieu.getSelectedIndex() == 1) {
                    for (int a = 0; a < modelphieucount.getRowCount(); a++) {
                        for (int b = 0; b < modelspco.getRowCount(); b++) {
                            if (modelphieucount.getValueAt(a, 0).toString().trim().equals(modelspco.getValueAt(b, 0).toString())) {
                                int x = (int) modelspco.getValueAt(b, 2);
                                int y = (int) modelphieucount.getValueAt(a, 2);
                                if ((x - y) <= 0) {
                                    JOptionPane.showMessageDialog(null, "Vuot qua ton kho !!!");
                                    modelphieucount.setValueAt(0, a, 2);
                                    return;
                                }
                            }
                        }
                    }
                }
                DefaultTableModel modeeeeee = (DefaultTableModel) grPhieuSPCT.getModel();
                Vector v = new Vector();
                int row = grPhieuSP.getSelectedRow();
                boolean dup = false;
                int ia = grPhieuSPCT.getRowCount();
                for (int i = 0; i < ia; i++) {
                    if (grPhieuSPCT.getModel().getValueAt(i, 0).toString().equals(grPhieuSP.getModel().getValueAt(row, 0).toString())) {
                        int sl = Integer.parseInt(grPhieuSPCT.getValueAt(i, 2).toString());
                        sl++;
                        grPhieuSPCT.setValueAt(sl, i, 2);
                        dup = true;
                        break;
                    }
                }

                if (!dup) {
                    v.add(grPhieuSP.getModel().getValueAt(row, 0).toString());
                    v.add(grPhieuSP.getModel().getValueAt(row, 1).toString());
                    v.add(1);
                    modeeeeee.addRow(v);
                }
            }
        }
    }//GEN-LAST:event_grPhieuSPKeyPressed

    private void grPhieuSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grPhieuSPMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelspco = (DefaultTableModel) grPhieuSP.getModel();
        DefaultTableModel modelphieucount = (DefaultTableModel) grPhieuSPCT.getModel();
        if (grPhieuSP.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Chưa chọn dòng nào");
            return;
        } else {
            if (cboLoaiPhieu.getSelectedIndex() == 1) {
                for (int a = 0; a < modelphieucount.getRowCount(); a++) {
                    for (int b = 0; b < modelspco.getRowCount(); b++) {
                        if (modelphieucount.getValueAt(a, 0).toString().trim().equals(modelspco.getValueAt(b, 0).toString())) {
                            int x = (int) modelspco.getValueAt(b, 2);
                            int y = (int) modelphieucount.getValueAt(a, 2);
                            if ((x - y) <= 0) {
                                JOptionPane.showMessageDialog(null, "Vượt quá tồn kho !!!");
                                modelphieucount.setValueAt(0, a, 2);
                                return;
                            }
                        }
                    }
                }
            }
            DefaultTableModel modeeeeee = (DefaultTableModel) grPhieuSPCT.getModel();
            Vector v = new Vector();
            int row = grPhieuSP.getSelectedRow();
            boolean dup = false;
            int ia = grPhieuSPCT.getRowCount();
            for (int i = 0; i < ia; i++) {
                if (grPhieuSPCT.getModel().getValueAt(i, 0).toString().equals(grPhieuSP.getModel().getValueAt(row, 0).toString())) {
                    int sl = Integer.parseInt(grPhieuSPCT.getValueAt(i, 2).toString());
                    sl++;
                    grPhieuSPCT.setValueAt(sl, i, 2);
                    dup = true;
                    break;
                }
            }

            if (!dup) {
                v.add(grPhieuSP.getModel().getValueAt(row, 0).toString());
                v.add(grPhieuSP.getModel().getValueAt(row, 1).toString());
                v.add(1);
                modeeeeee.addRow(v);
            }
        }
    }//GEN-LAST:event_grPhieuSPMouseClicked

    private void cboLoaiPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiPhieuActionPerformed
        // TODO add your handling code here:

        if (cboLoaiPhieu.getSelectedIndex() == 0) {
            lbPhieu.setText("Phiếu Nhập");
        }
        if (cboLoaiPhieu.getSelectedIndex() == 1) {
            lbPhieu.setText("Phiếu Xuất");
        }
    }//GEN-LAST:event_cboLoaiPhieuActionPerformed

    private void cboLoaiPhieuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiPhieuItemStateChanged
        // TODO add your handling code here:
        modelphieuct = (DefaultTableModel) grPhieuSPCT.getModel();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Object item = evt.getItem().toString().trim();
            if (item.equals("Xuất")) {
                modelphieuct.setRowCount(0);
            } else {
                modelphieuct.setRowCount(0);
            }
        }
    }//GEN-LAST:event_cboLoaiPhieuItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        sorter = (TableRowSorter) grPhieuSP.getRowSorter();

        ArrayList dk = new ArrayList();
        String s = txtTimKiem.getText().trim();
        dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 1));
        sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sorter = (TableRowSorter) grPhieuSP.getRowSorter();

            ArrayList dk = new ArrayList();
            String s = txtTimKiem.getText().trim();
            dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 1));
            sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
        }
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void btnTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoPhieuActionPerformed
        DefaultTableModel modelspco = (DefaultTableModel) grPhieuSP.getModel();
        DefaultTableModel modelphieucount = (DefaultTableModel) grPhieuSPCT.getModel();

        PhieuNX pnx = new PhieuNX(txtMaPhieu.getText().trim(), cboLoaiPhieu.getSelectedItem().toString().trim(), txtMaNVPhieu.getText().trim(), txtGhiChu.getText().trim());

        if (modelphieucount.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn ít nhất một sản phẩm cho phiếu");
            return;
        }
        for (int i = 0; i < modelphieucount.getRowCount(); i++) {
            int d = Integer.parseInt(modelphieucount.getValueAt(i, 2).toString());
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "Tối thiểu 1 sp");
                return;
            }
            if (d >= 200) {
                JOptionPane.showMessageDialog(null, "Vượt quá sô lượng xuất/nhập cho phép (200 tối đa)");
                return;
            }
        }
        if (pnx.insert() > 0) {
            DefaultTableModel modelthongtinphieu = (DefaultTableModel) ThongTinPhieu.getModel();
            modelthongtinphieu.addRow(pnx.toVector());
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            for (int c = 0; c < modelthongtinphieu.getRowCount(); c++) {
                if (txtMaPhieu.getText().trim().equals(modelthongtinphieu.getValueAt(c, 0).toString().trim())) {
                    modelthongtinphieu.setValueAt(dateFormat.format(date), c, 3);
                }
            }
            for (int i = 0; i < modelphieucount.getRowCount(); i++) {
                PhieuNXCT phieunxct = new PhieuNXCT(modelphieucount.getValueAt(i, 0).toString(), Integer.parseInt(modelphieucount.getValueAt(i, 2).toString()));
                // PhieuNXCT phieunxct = new PhieuNXCT(txtMaPhieu.getText(), modelphieucount.getValueAt(i, 0).toString(), Integer.parseInt(modelphieucount.getValueAt(i, 2).toString()));
                if (phieunxct.insert() > 0) {
                    fk = true;
                }
            }
            if (fk = true) {
                resetTable();
                initData();
                JOptionPane.showMessageDialog(null, "Thêm phiếu thành công");
                PhieuNX phieu = new PhieuNX();
                txtGhiChu.setText(null);

                int z = cboLoaiPhieu.getSelectedIndex();
                switch (z) {
                    case 0:
                        for (int a = 0; a < modelphieucount.getRowCount(); a++) {
                            for (int b = 0; b < modelspco.getRowCount(); b++) {
                                if (modelphieucount.getValueAt(a, 0).toString().trim().equals(modelspco.getValueAt(b, 0).toString())) {
                                    int x = (int) modelspco.getValueAt(b, 2);
                                    int y = (int) modelphieucount.getValueAt(a, 2);
                                    SanPham sp = new SanPham(Integer.parseInt(modelphieucount.getValueAt(a, 0).toString().trim()), null, null, (x + y));
                                    // PhieuNXCT phieuchitiet = new PhieuNXCT(txtMaPhieu.getText(), modelphieucount.getValueAt(a, 0).toString().trim(), (x + y), null);

                                    if (sp.update() > 0) {
                                        grPhieuSP.setValueAt(x + y, b, 2);
                                        // phieuchitiet.insert();
                                        break;
                                    } else {
                                        break;
                                    }

                                }
                            }
                        }

                        break;

                    case 1:
                        for (int a = 0; a < modelphieucount.getRowCount(); a++) {
                            for (int b = 0; b < modelspco.getRowCount(); b++) {
                                if (modelphieucount.getValueAt(a, 0).toString().trim().equals(modelspco.getValueAt(b, 0).toString())) {
                                    int x = (int) modelspco.getValueAt(b, 2);
                                    int y = (int) modelphieucount.getValueAt(a, 2);
                                    SanPham sp = new SanPham(Integer.parseInt(modelphieucount.getValueAt(a, 0).toString().trim()), null, null, (x - y));
                                    if (sp.update() > 0) {
                                        grPhieuSP.setValueAt(x - y, b, 2);
                                        break;
                                    } else {
                                        break;
                                    }

                                }
                            }
                        }
                        break;

                }
                modelphieucount.setRowCount(0);
            } else {
                JOptionPane.showMessageDialog(null, "Them phieu that bai");
            }
        }
    }//GEN-LAST:event_btnTaoPhieuActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
        initData();

    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void txtTimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sorter = (TableRowSorter) ThongTinPhieu.getRowSorter();
            ArrayList dk = new ArrayList();
            dk.clear();
            String s = txtTim.getText().trim();
            dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 0));
            sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
        }
    }//GEN-LAST:event_txtTimKeyPressed

    private void txtTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimActionPerformed

    private void rdLoai3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLoai3ActionPerformed
        // TODO add your handling code here:
        maPhieu = "";
        PanelLoai1.setVisible(false);
        PanelLoai2.setVisible(false);
        PanelLoai3.setVisible(true);
        btnSearchMaPhieu.setVisible(true);
        btnClearSearch.setVisible(false);
        btnSearchPhieu.setVisible(false);
    }//GEN-LAST:event_rdLoai3ActionPerformed

    private void btnSearchMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMaPhieuActionPerformed
        // TODO add your handling code here:
        sorter = (TableRowSorter) ThongTinPhieu.getRowSorter();

        ArrayList dk = new ArrayList();
        dk.clear();
        String s = txtTim.getText().trim();
        dk.add(javax.swing.RowFilter.regexFilter("(?i)" + s, 0));
        sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
    }//GEN-LAST:event_btnSearchMaPhieuActionPerformed

    private void btnClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSearchActionPerformed
        // TODO add your handling code here:
        sorter = (TableRowSorter) ThongTinPhieu.getRowSorter();
        sorter.setRowFilter(null);

    }//GEN-LAST:event_btnClearSearchActionPerformed

    private void btnSearchPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPhieuActionPerformed
        try {
            // TODO add your handling code here:
            sorter = (TableRowSorter) ThongTinPhieu.getRowSorter();
            List<Date> dates = new ArrayList<Date>();

            DateFormat formatter;

            formatter = new SimpleDateFormat("yyyy-MM-dd");

            if (rdLoai1.isSelected()) {
                String s = rdNhap.isSelected() ? "Nhập" : "Xuất";
                ArrayList dk = new ArrayList();
                dk.clear();
                dk.add(javax.swing.RowFilter.regexFilter(s.trim() + "", 1));
                sorter.setRowFilter(javax.swing.RowFilter.andFilter(dk));
            }
            if (rdLoai2.isSelected()) {

                String str_date = ((JTextField) txttungay.getDateEditor().getUiComponent()).getText();
                String end_date = ((JTextField) txtdenngay.getDateEditor().getUiComponent()).getText();
                if (str_date.trim().length() == 0 && str_date.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày");
                    return;
                }
                if (end_date.trim().length() == 0 && end_date.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày");
                    return;
                }

                ArrayList dkdate = new ArrayList();
                dkdate.clear();
                Date startDate = (Date) formatter.parse(str_date);
                Date endDate = (Date) formatter.parse(end_date);
                long interval = 24 * 1000 * 60 * 60; // 1 hour in millis
                long endTime = endDate.getTime(); // create your endtime here, possibly using Calendar or Date
                long curTime = startDate.getTime();
                while (curTime <= endTime) {
                    dates.add(new Date(curTime));
                    curTime += interval;
                }
                if (startDate.compareTo(endDate) > 0) {
                    JOptionPane.showMessageDialog(null, "Ngày bắt đầu phải lớn hơn ngày kết thúc");
                    return;
                }

                for (int i = 0; i < dates.size(); i++) {
                    Date lDate = (Date) dates.get(i);
                    String ds = formatter.format(lDate);
                    dkdate.add(javax.swing.RowFilter.regexFilter("" + ds, 3));
                    sorter.setRowFilter(javax.swing.RowFilter.orFilter(dkdate));
                }
            }
        } catch (ParseException ex) {
            // Logger.getLogger(PanelPhieu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.print("Lỗi:" + ex);
        }
    }//GEN-LAST:event_btnSearchPhieuActionPerformed

    private void rdLoai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLoai2ActionPerformed
        // TODO add your handling code here:
        maPhieu = "";
        PanelLoai1.setVisible(false);
        PanelLoai2.setVisible(true);
        PanelLoai3.setVisible(false);
        btnSearchMaPhieu.setVisible(false);
        btnClearSearch.setVisible(true);
        btnSearchPhieu.setVisible(true);
    }//GEN-LAST:event_rdLoai2ActionPerformed

    private void rdLoai1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdLoai1ActionPerformed
        // TODO add your handling code here:
        maPhieu = "";
        PanelLoai1.setVisible(true);
        PanelLoai2.setVisible(false);
        PanelLoai3.setVisible(false);
        btnSearchMaPhieu.setVisible(false);
        btnClearSearch.setVisible(true);
        btnSearchPhieu.setVisible(true);
    }//GEN-LAST:event_rdLoai1ActionPerformed

    private void ThongTinPhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThongTinPhieuMouseClicked
        // TODO add your handling code here:
        int i = ThongTinPhieu.getSelectedRow();
        String s = ThongTinPhieu.getValueAt(i, 0).toString();
        maPhieu = ThongTinPhieu.getValueAt(i, 0).toString();

        modelphieuct = (DefaultTableModel) ThongTinPhieuCT.getModel();
        modelphieu = (DefaultTableModel) ThongTinPhieu.getModel();
        if (modelphieuct.getRowCount() > 0) {
            if (!modelphieuct.getValueAt(0, 0).toString().equals(s)) {
                int rowCount = modelphieuct.getRowCount();
                for (int e = rowCount - 1; e >= 0; e--) {
                    modelphieuct.removeRow(e);
                }
            }
        } else {
            PhieuNXCT pct = new PhieuNXCT();

            for (PhieuNXCT phieu : pct.getList(s)) {
                modelphieuct.addRow(phieu.toVector());
            }
        }
        PanelCapNhat_Phieu.setVisible(false);
    }//GEN-LAST:event_ThongTinPhieuMouseClicked

    private void ThongTinPhieuCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThongTinPhieuCTMouseClicked
        // TODO add your handling code here:
        int i = ThongTinPhieuCT.getSelectedRow();
        String s1 = ThongTinPhieuCT.getValueAt(i, 0).toString();
        String s2 = ThongTinPhieuCT.getValueAt(i, 1).toString();
        String s3 = ThongTinPhieuCT.getValueAt(i, 2).toString();

        txtMaSP_Phieu.setText(s1);
        txtTenSP_Phieu.setText(s2);
        txtSL_Phieu.setText(s3);
        PanelCapNhat_Phieu.setVisible(true);

    }//GEN-LAST:event_ThongTinPhieuCTMouseClicked

    private void btnCapNhatSLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatSLMouseClicked
        // TODO add your handling code here:
        String sl = txtSL_Phieu.getText();
        try {
            if (sl.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không được để trống");
            } else {
                double soluong = Double.parseDouble(sl);
                if (soluong < 0) {
                    JOptionPane.showMessageDialog(this, "Không được nhỏ hơn 0 !");
                    txtSL_Phieu.requestFocus();
                    return;
                }
                if (soluong > 0) {
                    JOptionPane.showMessageDialog(this, "Không được lớn hơn 200 !");
                    txtSL_Phieu.requestFocus();
                    return;
                }
                PhieuNXCT phieunxct = new PhieuNXCT();
                phieunxct.update(maPhieu, txtMaSP_Phieu.getText().toString(), Integer.parseInt(txtSL_Phieu.getText().toString()));
                // resetTable();
                initData();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Bạn phải nhập số");
            txtSL_Phieu.requestFocus();
        }

    }//GEN-LAST:event_btnCapNhatSLMouseClicked

    private void btnXoaFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaFormActionPerformed
        // TODO add your handling code here:
        txtMaSP_Phieu.setText("");
        txtTenSP_Phieu.setText("");
        txtSL_Phieu.setText("");
        PanelCapNhat_Phieu.setVisible(false);
    }//GEN-LAST:event_btnXoaFormActionPerformed

    private void btnCapNhatHeThongTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatHeThongTableActionPerformed
        // TODO add your handling code here:
        maPhieu = "";
        // resetTable();
        initData();
    }//GEN-LAST:event_btnCapNhatHeThongTableActionPerformed

    private void btnHuyPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyPhieuActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
        PhieuNX phieuNX = new PhieuNX();
        PhieuNXCT phieuCT = new PhieuNXCT();
        if (maPhieu.equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn phải chọn Phiếu cần hủy");
            return;
        }
        if (modelphieuct.getRowCount() < 1) {
            List<PhieuNX> a = phieuNX.getList();
            for (PhieuNX phieuNX1 : a) {
                if (maPhieu.equals(phieuNX1.getMaPhieu())) {
                    JOptionPane.showMessageDialog(this, phieuNX1.getGhiChu());
                }
            }

            return;
        }
        int result = JOptionPane.showConfirmDialog(this, "Bạn có muốn hủy phiếu " + maPhieu, "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {

            phieuNX.update_GhiChu(maPhieu, "Đã được hủy bởi " + FrLogin.id + " vào ngày " + dateFormat.format(date));
            phieuCT.delete(maPhieu);
            // resetTable();
            initData();
        }
    }//GEN-LAST:event_btnHuyPhieuActionPerformed

    private void btnCapNhatSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSLActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnCapNhatSLActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        initData();
    }//GEN-LAST:event_jButton3MouseClicked

    private void txtMaNVPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVPhieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVPhieuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCapNhat_Phieu;
    private javax.swing.JPanel PanelLapPhieu;
    private javax.swing.JPanel PanelLoai1;
    private javax.swing.JPanel PanelLoai2;
    private javax.swing.JPanel PanelLoai3;
    private javax.swing.JPanel PanelThongTinPhieu;
    private javax.swing.JPanel PanelTimKiem;
    private javax.swing.JTable ThongTinPhieu;
    private javax.swing.JTable ThongTinPhieuCT;
    private javax.swing.JButton btnCapNhatHeThongTable;
    private javax.swing.JButton btnCapNhatSL;
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnClearSearch;
    private javax.swing.JButton btnHuyPhieu;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchMaPhieu;
    private javax.swing.JButton btnSearchPhieu;
    private javax.swing.JButton btnTaoPhieu;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaForm;
    private javax.swing.JButton btnXoaHet;
    private javax.swing.JButton btnXoaTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboLoaiPhieu;
    private javax.swing.ButtonGroup grLoai;
    private javax.swing.ButtonGroup grNX;
    private javax.swing.JTable grPhieuSP;
    private javax.swing.JTable grPhieuSPCT;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lbPhieu;
    private javax.swing.JRadioButton rdLoai1;
    private javax.swing.JRadioButton rdLoai2;
    private javax.swing.JRadioButton rdLoai3;
    private javax.swing.JRadioButton rdNhap;
    private javax.swing.JRadioButton rdXuat;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaNVPhieu;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtMaSP_Phieu;
    private javax.swing.JTextField txtSL_Phieu;
    private javax.swing.JTextField txtTenSP_Phieu;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtTimKiem;
    private com.toedter.calendar.JDateChooser txtdenngay;
    private com.toedter.calendar.JDateChooser txttungay;
    // End of variables declaration//GEN-END:variables
    private void resetTable() {
        modelphieu = (DefaultTableModel) ThongTinPhieu.getModel();
        modelphieuct = (DefaultTableModel) ThongTinPhieuCT.getModel();
        model = (DefaultTableModel) grPhieuSP.getModel();

        modelphieu.setRowCount(0);
        modelphieuct.setRowCount(0);
        model.setRowCount(0);
    }

    private void initData() {
        PanelLoai1.setVisible(false);
        PanelLoai2.setVisible(false);
        PanelLoai3.setVisible(true);
        btnSearchMaPhieu.setVisible(true);
        btnClearSearch.setVisible(false);
        btnSearchPhieu.setVisible(false);
        PanelCapNhat_Phieu.setVisible(false);
        resetTable();

        SanPham sp = new SanPham();
        for (SanPham faculty : sp.getList()) {
            model.addRow(faculty.toVector());
        }

        PhieuNX p = new PhieuNX();
        for (PhieuNX phieu : p.getList()) {
            modelphieu.addRow(phieu.toVector());
        }
        txtMaNVPhieu.setText("" + FrLogin.id);

        CapNhatBaoCao();

    }

    private void CapNhatBaoCao() {
        BaoCao bc = new BaoCao();
        bc.findSoLuongSP();  // tìm số luog sản phẩm để gán countsoluongsp
        //  String s = "S0000";
        int s = 0;
        for (int i = 0; i <= bc.getCountsoluongsp(); i++) {

            bc.findSoLuongPhieu(s);
            String ten = null;
            int tonkho = 0;
            int xuat = 0;
            int nhap = 0;
            int toncuoi = 0;
            String LoaiSP = null;
            for (BaoCao tete : bc.getListNew(s)) {
                String a = tete.toVector().elementAt(0).toString();
                ten = tete.toVector().elementAt(2).toString();
                String loai = tete.toVector().elementAt(4).toString();
                tonkho = Integer.parseInt(tete.toVector().elementAt(5).toString());
                LoaiSP = tete.toVector().elementAt(6).toString().trim();
                switch (loai) {
                    case "Nhập":
                        int x = Integer.parseInt(tete.toVector().elementAt(3).toString());
                        nhap += x;
                        break;
                    case "Xuất":
                        int y = Integer.parseInt(tete.toVector().elementAt(3).toString());
                        xuat += y;
                        break;
                    default:
                        break;
                }
                tete.updateTonKho(nhap - xuat);
            }

            // int ma = Integer.parseInt(s.substring(1));
            //   ma++;
            //s = ("S" + String.format("%04d", ma));
            s++;
        }
    }

}
