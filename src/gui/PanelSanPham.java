/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Baocao.BaoCao;
import Phieu.PhieuNXCT;
import Phieu.SanPham;
import javax.swing.JOptionPane;
import SanPham.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Windows
 */
public class PanelSanPham extends javax.swing.JPanel {

    int max;

    /**
     * Creates new form PanelSanPham
     */
    public PanelSanPham() {
        initComponents();
        initModel();
        txtMaSP.setVisible(false);
        txtTonKho.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnSanPham = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grSanPham = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        btnThemSP = new javax.swing.JButton();
        btnCapNhatSP = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnXoa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNgaynhap = new javax.swing.JFormattedTextField();
        btnReset = new javax.swing.JButton();
        cboMaloaiSP = new javax.swing.JComboBox();
        cboMaNSX = new javax.swing.JComboBox();
        cboMaQuocGia = new javax.swing.JComboBox();
        txtTonKho = new javax.swing.JTextField();
        btnCapNhat_HT_SanPham = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtGiaSP = new javax.swing.JTextField();
        cboTrangThai = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();

        pnSanPham.setMaximumSize(new java.awt.Dimension(600, 550));
        pnSanPham.setMinimumSize(new java.awt.Dimension(600, 550));
        pnSanPham.setPreferredSize(new java.awt.Dimension(727, 500));

        grSanPham.setAutoCreateRowSorter(true);
        grSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Mã NSX", "Mã Loại SP", "Mã QG", "Sô Lượng", "Ngày nhập", "Giá SP", "Trạng thái", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grSanPham);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Tên sản phẩm:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Nhà sản xuất:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Quốc gia:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Ghi chú:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Loại sản phẩm:");

        txtMaSP.setEnabled(false);

        txtTenSP.setEnabled(false);

        btnThemSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThemSP.setText("Thêm");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnCapNhatSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCapNhatSP.setText("Cập nhật");
        btnCapNhatSP.setEnabled(false);
        btnCapNhatSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSPActionPerformed(evt);
            }
        });

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        txtMoTa.setEnabled(false);
        jScrollPane3.setViewportView(txtMoTa);

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Ngày nhập:");

        txtNgaynhap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd MM YYYY"))));
        txtNgaynhap.setEnabled(false);

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReset.setText("Huỷ bỏ");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cboMaloaiSP.setEnabled(false);

        cboMaNSX.setEnabled(false);
        cboMaNSX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboMaNSXMouseClicked(evt);
            }
        });
        cboMaNSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaNSXActionPerformed(evt);
            }
        });

        cboMaQuocGia.setEnabled(false);

        txtTonKho.setEditable(false);
        txtTonKho.setText("0");
        txtTonKho.setEnabled(false);
        txtTonKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTonKhoActionPerformed(evt);
            }
        });

        btnCapNhat_HT_SanPham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCapNhat_HT_SanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        btnCapNhat_HT_SanPham.setText("Quản lý loại sản phẩm");
        btnCapNhat_HT_SanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhat_HT_SanPhamActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Giá sản phẩm:");

        txtGiaSP.setEnabled(false);

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Còn hàng", "Hết hàng", "Ngưng bán", "Không sản xuất" }));
        cboTrangThai.setEnabled(false);
        cboTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrangThaiActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Trạng thái:");

        javax.swing.GroupLayout pnSanPhamLayout = new javax.swing.GroupLayout(pnSanPham);
        pnSanPham.setLayout(pnSanPhamLayout);
        pnSanPhamLayout.setHorizontalGroup(
            pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSanPhamLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSanPhamLayout.createSequentialGroup()
                        .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapNhatSP, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapNhat_HT_SanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnSanPhamLayout.createSequentialGroup()
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGiaSP)
                            .addComponent(cboMaNSX, 0, 184, Short.MAX_VALUE)
                            .addComponent(cboMaQuocGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboMaloaiSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnSanPhamLayout.createSequentialGroup()
                                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel18))
                                .addGap(25, 25, 25)
                                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addGroup(pnSanPhamLayout.createSequentialGroup()
                                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cboTrangThai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNgaynhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(pnSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        pnSanPhamLayout.setVerticalGroup(
            pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSanPhamLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel1)
                    .addComponent(txtNgaynhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTonKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cboMaNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(21, 21, 21)
                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSanPhamLayout.createSequentialGroup()
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboMaQuocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cboMaloaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtGiaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnSanPhamLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addGroup(pnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhatSP)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemSP)
                    .addComponent(btnReset)
                    .addComponent(btnCapNhat_HT_SanPham))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void grSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grSanPhamMouseClicked
        // TODO add your handling code here:
        fillDataFromTable();
        btnXoa.setEnabled(true);
        btnCapNhatSP.setEnabled(true);
        btnThemSP.setEnabled(false);
    }//GEN-LAST:event_grSanPhamMouseClicked

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        // TODO add your handling code here:
        Pattern p = null;
        Matcher m = null;
        if (btnThemSP.getText().equalsIgnoreCase("Thêm")) {
            txtMaSP.setEnabled(false);
            txtTenSP.setEnabled(true);
            txtGiaSP.setEnabled(true);
            cboMaNSX.setEnabled(true);
            //txtTonKho.setEnabled(true);
            cboMaQuocGia.setEnabled(true);
            cboMaloaiSP.setEnabled(true);
            cboTrangThai.setEnabled(true);
            txtMoTa.setEnabled(true);
            txtTonKho.setText("0");
            btnThemSP.setText("Lưu");
            btnCapNhatSP.setEnabled(false);
            btnXoa.setEnabled(false);

            txtMaSP.setText(null);
            txtTenSP.setText(null);
            txtGiaSP.setText(null);
            txtMoTa.setText(null);
            DateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            Date date1 = new Date();
            txtNgaynhap.setText(dateFormat1.format(date1));
        } else {
            Sanpham sp = new Sanpham();

            if (txtTenSP.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống tên sản phẩm");
                return;
            }
            if (sp.findname(txtTenSP.getText().toString())) {
                JOptionPane.showMessageDialog(null, "Tên sản phẩm đã tồn tại");
                return;
            }
            if (txtTonKho.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống số lượng");
                return;
            }
            
                if (txtGiaSP.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống giá sản phẩm");
                return;
            }
            
            
            Quocgia qg = new Quocgia();
            qg.findID(cboMaQuocGia.getSelectedItem().toString().trim());
            int maqg = qg.getMaQuocGia();

            MaloaiSP mlsp = new MaloaiSP();
            mlsp.findID(cboMaloaiSP.getSelectedItem().toString().trim());
            int lsp = mlsp.getMaLoaiSP();

            NSX ns = new NSX();
            ns.findID(cboMaNSX.getSelectedItem().toString().trim());

            String ns1 = "" + ns.getMaNSX();
            
             int ton = Integer.parseInt(txtTonKho.getText());
            int gia;
            try {
                 gia = Integer.parseInt(txtGiaSP.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Nhập số vào giá sản phẩm");
                return;
            }
            
            // int mnsx = ns.getMaNSX();
            //int malsp = mlsp.getMaLoaiSP() ;
            Sanpham b = new Sanpham(txtTenSP.getText(),
                    ns1, lsp, maqg, txtMoTa.getText(), txtNgaynhap.getText(), ton, gia);
            if (b.insert(b) > 0) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                // model.addRow(b.toVector());
                initModel();
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date date = new Date();

            } else {
                JOptionPane.showMessageDialog(null, "Them that bai");
            }

            btnThemSP.setText("Thêm");
            btnCapNhatSP.setEnabled(false);
            btnXoa.setEnabled(false);
            btnReset.setEnabled(true);

            txtMaSP.setText(null);
            txtTenSP.setText(null);
            txtMoTa.setText(null);
            txtGiaSP.setText(null);

            txtNgaynhap.setText(null);
            txtMaSP.setEnabled(false);
            txtTenSP.setEnabled(false);
            cboMaNSX.setEnabled(false);
            cboMaQuocGia.setEnabled(false);
            cboMaloaiSP.setEnabled(false);
            cboTrangThai.setEnabled(false);
            txtMoTa.setEnabled(false);
            txtGiaSP.setEnabled(false);
            //txtTonKho.setEnabled(false);
        }

    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnCapNhatSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSPActionPerformed
        // TODO add your handling code here:
        int i = grSanPham.getSelectedRow();

        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Chưa chọn dòng để cập nhật thông tin");
            return;
        }
        Pattern p = null;
        Matcher m = null;
        
        if (btnCapNhatSP.getText().equalsIgnoreCase("Cập nhật")) {
            txtTenSP.setEnabled(true);
            cboMaNSX.setEnabled(true);
            cboMaQuocGia.setEnabled(true);
            cboMaloaiSP.setEnabled(true);
            cboTrangThai.setEnabled(true);
            txtMoTa.setEnabled(true);
            txtGiaSP.setEnabled(true);
            //txtTonKho.setEnabled(true);
            btnCapNhatSP.setText("Lưu");
            btnThemSP.setEnabled(false);
            btnXoa.setEnabled(false);
        } else {
            Sanpham sp = new Sanpham();
            sp.findID(txtMaSP.getText().trim());
            sp.findname(txtTenSP.getText().trim());

            if (txtTenSP.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống Tên Sản Phẩm");
                return;
            }

            for (int j = 0; j < listCapNhat.size(); j++) {
                String masp = txtMaSP.getText().toString();
                String tensp = txtTenSP.getText().toString();
                Sanpham na = listCapNhat.get(j);

                if (!(na.getMaSP().equals(masp)) && na.getTenSP().equalsIgnoreCase(tensp)) {
                    JOptionPane.showMessageDialog(null, "Trùng tên sản phẩm");
                    return;
                }
            }

            if (txtTonKho.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Không được bỏ trống số lượng");
                return;
            }

            Quocgia qg = new Quocgia();
            qg.findID(cboMaQuocGia.getSelectedItem().toString().trim());
            String maqg = String.format("%d", qg.getMaQuocGia());

            MaloaiSP mlsp = new MaloaiSP();
            mlsp.findID(cboMaloaiSP.getSelectedItem().toString().trim());
            String lsp = String.format("%d", mlsp.getMaLoaiSP());

            NSX ns = new NSX();
            ns.findID(cboMaNSX.getSelectedItem().toString().trim());
            String ns1 = String.format("%s", ns.getMaNSX());

            int tonkho = Integer.parseInt(txtTonKho.getText());
            int gia;
            try {
                 gia = Integer.parseInt(txtGiaSP.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Nhập số vào giá sản phẩm");
                return;
            }
            
            int trangthai = cboTrangThai.getSelectedIndex();
            Sanpham b = new Sanpham(txtMaSP.getText(), txtTenSP.getText(),
                    ns1, mlsp.getMaLoaiSP(), qg.getMaQuocGia(), txtMoTa.getText(), null, tonkho, gia, trangthai);

            if (b.update(b) > 0) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                initModel();
                setNull();
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
            }
        }
    }//GEN-LAST:event_btnCapNhatSPActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int i = grSanPham.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Chưa chọn sản phẩm cần xóa");
            return;
        }

        Sanpham b = new Sanpham(txtMaSP.getText());

        PhieuNXCT phieu = new PhieuNXCT();
        if (phieu.findmasp(txtMaSP.getText().toString())) {
            JOptionPane.showMessageDialog(null, "Mặt hàng đã nhập hoặc xuất trong kho");
            return;
        }

        int r = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa " + txtTenSP.getText().toString() + "?", "   ", JOptionPane.YES_NO_OPTION);
        if (r == JOptionPane.YES_OPTION) {
            if (b.delete(b) > 0) {
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                model.removeRow(i);
                txtMaSP.setText(null);
                txtTenSP.setText(null);
                txtMoTa.setText(null);
                txtNgaynhap.setText(null);
                txtGiaSP.setText(null);
            }

        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
       setNull();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cboMaNSXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboMaNSXMouseClicked
        // TODO add your handling code here:
        //initModel();
    }//GEN-LAST:event_cboMaNSXMouseClicked

    private void btnCapNhat_HT_SanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhat_HT_SanPhamActionPerformed
        
        DialogLoaiSanPham dialog = new DialogLoaiSanPham(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter(){
         @Override
            public void windowClosed(WindowEvent e) {
                initModel();
                fillDataFromTable();
            }
        
        });
        
    }//GEN-LAST:event_btnCapNhat_HT_SanPhamActionPerformed

    private void txtTonKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTonKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTonKhoActionPerformed

    private void cboMaNSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaNSXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMaNSXActionPerformed

    private void cboTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrangThaiActionPerformed
        // TODO add your handling code here:

        if (cboTrangThai.getSelectedIndex() == 0) {
            // cboTrangThai.setText("Phiếu Nhập");
        }
        if (cboTrangThai.getSelectedIndex() == 1) {
            // lbPhieu.setText("Phiếu Xuất");
        }
    }//GEN-LAST:event_cboTrangThaiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatSP;
    private javax.swing.JButton btnCapNhat_HT_SanPham;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox cboMaNSX;
    private javax.swing.JComboBox cboMaQuocGia;
    private javax.swing.JComboBox cboMaloaiSP;
    private javax.swing.JComboBox cboTrangThai;
    private javax.swing.JTable grSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnSanPham;
    private javax.swing.JTextField txtGiaSP;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JFormattedTextField txtNgaynhap;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTonKho;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model;
    ArrayList<Quocgia> QGList;
    ArrayList<NSX> nsxList;
    ArrayList<MaloaiSP> MaList;
    ArrayList<Sanpham> listCapNhat;

    public void hethongSanPham() {
        initModel();
        fillDataFromTable();

    }

    private void initModel() {
        Quocgia qg = new Quocgia();
        QGList = new ArrayList<>();
        QGList.clear();
        cboMaQuocGia.removeAllItems();
        QGList = qg.getList();
        for (Quocgia quocgia : QGList) {
            cboMaQuocGia.addItem(quocgia.getTenQuocGia());
        }
        NSX nsx1 = new NSX();
        nsxList = new ArrayList<>();
        nsxList.clear();
        cboMaNSX.removeAllItems();
        nsxList = nsx1.getList();
        for (NSX nsx : nsxList) {
            cboMaNSX.addItem(nsx.getTenNSX());
        }
        MaloaiSP mal = new MaloaiSP();
        MaList = new ArrayList<>();
        MaList.clear();
        cboMaloaiSP.removeAllItems();
        MaList = mal.getList();
        for (MaloaiSP m : MaList) {
            cboMaloaiSP.addItem(m.getTenLoaiSP());
        }
        model = (DefaultTableModel) grSanPham.getModel();
        model.setRowCount(0);
        listCapNhat = new ArrayList<Sanpham>();
        listCapNhat.clear();
        Sanpham b = new Sanpham();
        listCapNhat = b.getList();
        for (Sanpham sp : b.getList()) {
            model.addRow(sp.toVector());
        }
    }

    private void fillDataFromTable() {
        //lay chi so dong duoc chon tren Table
        int i = grSanPham.getSelectedRow();

        if (i < 0) {
            return;
        }
        NSX nsx = new NSX();
        List<NSX> list = nsx.getList();
        String ma = grSanPham.getValueAt(i, 2).toString();
        int cc = Integer.parseInt(ma);
        for (NSX nsx1 : list) {
            if (nsx1.getMaNSX() == (cc)) {
                cboMaNSX.setSelectedItem(nsx1.getTenNSX().toString());
            }
        }

        Quocgia qg = new Quocgia();
        List<Quocgia> listqg = qg.getList();
        String maqg = grSanPham.getValueAt(i, 4).toString();
        for (Quocgia quocgia : listqg) {
            if (quocgia.getMaQuocGia() == Integer.parseInt(maqg)) {
                cboMaQuocGia.setSelectedItem("" + quocgia.getTenQuocGia().toString());
            }
        }
        MaloaiSP maloai = new MaloaiSP();
        List<MaloaiSP> loaisp = maloai.getList();
        String maloaisp = grSanPham.getValueAt(i, 3).toString();
        for (MaloaiSP maloaiSP : loaisp) {
            if (maloaiSP.getMaLoaiSP() == Integer.parseInt(maloaisp)) {
                cboMaloaiSP.setSelectedItem("" + maloaiSP.getTenLoaiSP().toString());
            }
        }
        txtMaSP.setText(grSanPham.getValueAt(i, 0).toString());
        txtTenSP.setText(grSanPham.getValueAt(i, 1).toString());
        txtTonKho.setText(grSanPham.getValueAt(i, 5).toString());
        txtNgaynhap.setText(grSanPham.getValueAt(i, 6).toString());
        txtGiaSP.setText(grSanPham.getValueAt(i, 7).toString());
        cboTrangThai.setSelectedIndex(Integer.parseInt(grSanPham.getValueAt(i, 8).toString()));
        txtMoTa.setText(grSanPham.getValueAt(i, 9).toString());
    }
    private void setNull(){
       txtMaSP.setText(null);
        txtTenSP.setText(null);
        txtMoTa.setText(null);
        txtGiaSP.setText(null);
        txtNgaynhap.setText(null);
        txtMaSP.setEnabled(false);
        txtTenSP.setEnabled(false);
        txtTonKho.setEnabled(false);
        txtMoTa.setEnabled(false);
        txtGiaSP.setEnabled(false);
        cboMaNSX.setEnabled(false);
        cboMaQuocGia.setEnabled(false);
        cboMaloaiSP.setEnabled(false);
        cboTrangThai.setEnabled(false);
        btnThemSP.setEnabled(true);
        btnXoa.setEnabled(false);
        btnReset.setEnabled(true);
        btnCapNhatSP.setEnabled(false);
        btnCapNhatSP.setText("Cập nhật");
        btnThemSP.setText("Thêm");
        cboTrangThai.setSelectedIndex(0);
        grSanPham.requestFocusInWindow();
    }
}
